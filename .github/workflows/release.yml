name: Build and Release

permissions:
  contents: write

on:
  release:
    types: [ created ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.set_branches.outputs.branches }}
    steps:
      - name: List branches
        id: set_branches
        run: |
          BRANCHES=$(gh api repos/${GITHUB_REPOSITORY}/branches --paginate \
            | jq -c '[.[] | select(.name == "main" or (.name | startswith("backport/"))) | .name]')
          echo "branches=$BRANCHES" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJson(needs.prepare.outputs.branches) }}
        platform: [ fabric, neoforge ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}
      - name: Extract Java version
        id: java_version
        run: |
          JAVA_VERSION=$(grep '^java_version=' gradle.properties | cut -d'=' -f2-)
          echo "java_version=$JAVA_VERSION" >> $GITHUB_OUTPUT
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ steps.java_version.outputs.java_version }}
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ matrix.branch }}-${{ hashFiles('**/*.gradle*', '**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.branch }}-
      - name: Build
        run: ./gradlew build
      - name: Prepare JAR for upload
        run: |
          VERSION=$(grep '^mod_version=' gradle.properties | cut -d'=' -f2-)
          ARCHIVES_NAME=$(grep '^archives_name=' gradle.properties | cut -d'=' -f2-)
          MC_VERSION=$(grep '^minecraft_version=' gradle.properties | cut -d'=' -f2-)
          JAR_PATH="./${{ matrix.platform }}/build/libs/${ARCHIVES_NAME}-${{ matrix.platform }}-mc${MC_VERSION}-${VERSION}.jar"
          echo "JAR_PATH=${JAR_PATH}" >> $GITHUB_ENV
      - name: Log environment info
        run: |
          echo "MC Branch: ${{ matrix.branch }}"
          echo "Platform: ${{ matrix.platform }}"
          echo "Java Version: ${{ steps.java_version.outputs.java_version }}"
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.JAR_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}